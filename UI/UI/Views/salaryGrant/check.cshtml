@model List<Entity.salary_grant_details>
@{
    Layout = null;
    ViewBag.Title = "check";

    Entity.salary_grant sg = ViewBag.sg as Entity.salary_grant;
    List<Entity.salary_standard_details> sgd = ViewBag.details as List<Entity.salary_standard_details>;
}
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-trasitional.dtd">
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <link rel="stylesheet" href="~/css/table.css" type="text/css" />
    <script src="~/javascript/jquery-1.7.2.js"></script>
    <title>无标题文档</title>
    <style type="text/css">
        <!--
        .style3 {
            color: #0000CC;
        }

        td {
            text-align: center;
        }
        -->
    </style>

</head>

<body>
    <form method="post" action="~/salaryGrant/check_success">
        <table width="100%">
            <tr>
                <td style="text-align:left;">
                    <font color="black">您正在做的业务是:人力资源管理--薪酬发放管理--薪酬发放复核</font>
                </td>
            </tr>
            <tr>
                <td colspan="2" style="text-align: right">
                    <input type="submit" value="复核通过" class="BUTTON_STYLE1">
                    <input type="button" value="返 回" onclick="location.href='check_list'" class="BUTTON_STYLE1">
                </td>
            </tr>
            <tr>
                <td colspan="2" style="text-align: left">
                    薪酬单编号：@sg.salary_grant_id
                    <input type="hidden" name="salary_grant_id" value="@sg.salary_grant_id">
                    <input type="hidden" name="sgr_id" value="@sg.sgr_id">
                    <input type="hidden" name="salary_standard_id" value="@sg.salary_standard_id">
                </td>
            </tr>
            <tr>
                <td colspan="2" style="text-align: left">
                    机构：
                    @{
                        if (sg.first_kind_name != null)
                        {
                            @("I级结构")
                            <input type="hidden" name="first_kind_id" value="@sg.first_kind_id" />
                            <input type="hidden" name="first_kind_name" value="@sg.first_kind_name" />
                        }
                        else if (sg.second_kind_name != null)
                        {
                            @("II级结构")
                            <input type="hidden" name="second_kind_id" value="@sg.second_kind_id" />
                            <input type="hidden" name="second_kind_name" value="@sg.second_kind_name" />
                        }
                        else if (sg.third_kind_name != null)
                        {
                            @("III级结构")
                            <input type="hidden" name="third_kind_id" value="@sg.third_kind_id" />
                            <input type="hidden" name="third_kind_name" value="@sg.third_kind_name" />
                        }
                    }
                </td>
            </tr>
            <tr>
                <td style="text-align: left">
                    本机构总人数:@sg.human_amount
                    <input type="hidden" name="human_amount" value="@sg.human_amount">
                    ，基本薪酬总数:@(sg.salary_standard_sum.HasValue ? (double)sg.salary_standard_sum : 0.0)<input type="hidden" name="salary_standard_sum" value="@(sg.salary_standard_sum.HasValue?(double)sg.salary_standard_sum:0.0)" />
                    ，实发总额:<span id="salarySum_sum">@(sg.salary_paid_sum.HasValue ? (double)sg.salary_paid_sum : 0.0)</span>
                    <input type="hidden" value="" name="salary_paid_sum" id="sum"/>
                    <input type="hidden" name="register" value="@sg.register" />
                    <input type="hidden" name="regist_time" value="@sg.regist_time" />
                </td>
                <td style="text-align: right">

                    复核人:<input type="text" name="checker" value="@ViewBag.user" size="8" readonly="readonly">
                    复核时间：<span id="Tdate"></span>
                    <input type="hidden" name="check_time" id="Tdate2">
                </td>
            </tr>
        </table>
        <table width="100%" border="1" cellpadding=0 cellspacing=1
               bordercolorlight=#848284 bordercolordark=#eeeeee
               class="TABLE_STYLE1">
            <tr>
                <td class="TD_STYLE1">
                    <span>序号</span>
                </td>
                <td class="TD_STYLE1">
                    <span>档案编号</span>
                </td>
                <td class="TD_STYLE1">
                    <span>姓名</span>
                </td>
                <td class="TD_STYLE1" width="7%">
                    工资详情
                </td>
                <td class="TD_STYLE1" width="7%">
                    奖励金额
                </td>
                <td class="TD_STYLE1" width="7%">
                    销售绩效总额
                </td>
                <td class="TD_STYLE1" width="7%">
                    应扣金额
                </td>
                <td class="TD_STYLE1" width="7%">
                    实发金额
                </td>

            </tr>
            @{
                int i = 1;
                foreach (var item in Model)
                {
                    <input type="hidden" name="grantDetails[@{@(i - 1)}].salary_grant_id" value="@item.salary_grant_id">
        <tr class="TD_STYLE2">
            <td>
                @i
            </td>
            <td>
                @item.human_id
                <input type="hidden" name="grantDetails[@{@(i - 1)}].human_id" value="@item.human_id" />
            </td>
            <td>
                @item.human_name
                <input type="hidden" name="grantDetails[@{@(i - 1)}].human_name" value="@item.human_name" />
            </td>
            @{
                IBLL.IHumanFileBll bll = IocContainer.IocCreate.CreateBll<IBLL.IHumanFileBll>("HumanFileBll");
                Entity.human_file hf = bll.FindAll().Where(f => f.human_id == item.human_id).FirstOrDefault();
                List<Entity.salary_standard_details> details = sgd.Where(e=>e.standard_id==hf.salary_standard_id).OrderBy(e => e.item_id).ToList();
                List<Entity.salary_item> salaryItem = (ViewBag.item as List<Entity.salary_item>);
                int reader = 0;
                double sum = 0;
                for (int K = 0; K < salaryItem.Count; K++)
                {
                    //当前的列等于生成列
                    if (details.Count > 0 && salaryItem[K].item_id == details[reader].item_id)
                    {
                        sum += details[reader].salary.HasValue == true ? (double)details[reader].salary : 0.0;
                        if (reader < details.Count - 1)
                        {
                            reader++;
                        }
                    }
                }
            }
            <td>
                <a href="../list/@sg.salary_standard_id">工资详情</a>
            </td>
            <td>
                <input type="hidden" id="salaryStandardSum@{@i}" name="grantDetails[@{@(i - 1)}].salary_standard_sum" value="@sum" />
                <input type="text" name="grantDetails[@{@(i - 1)}].bouns_sum" id="bounsSum@{@i}" value="@(item.bouns_sum.HasValue ? (double)item.bouns_sum: 0.0)" onkeyup="onKeyPress('@{@i}')" class="INPUT_STYLE2" />
            </td>
            <td>
                <input type="text" name="grantDetails[@{@(i - 1)}].sale_sum" id="saleSum@{@i}" value="@(item.sale_sum.HasValue ? (double)item.sale_sum: 0.0)" onkeyup="onKeyPress('@{@i}')" class="INPUT_STYLE2" />
            </td>
            <td>
                <input type="text" name="grantDetails[@{@(i - 1)}].deduct_sum" id="deductSum@{@i}" value="@(item.deduct_sum.HasValue ? (double)item.deduct_sum: 0.0)" a="@item.deduct_sum" onkeyup="onKeyPress('@{@i}')" class="INPUT_STYLE2" />
            </td>
            <td>
                <input type="text" name="grantDetails[@{@(i - 1)}].salary_paid_sum" readonly="readonly" value="@(item.salary_paid_sum.HasValue ? (double)item.salary_paid_sum: 0.0)" id="salaryPaidSum@{@i}" class="INPUT_STYLE2" />
                <input type="hidden"  name="count[@{@(i - 1)}].salary_paid_sum" readonly="readonly" value="@(item.salary_paid_sum.HasValue ? (double)item.salary_paid_sum: 0.0)" id="salaryPaidSum@{@i}" class="INPUT_STYLE2" />
                <input type="hidden" value="@item.grd_id" name="grantDetails[@{@(i - 1)}].grd_id"/>

            </td>

        </tr>
        i++;
    }
            }
        </table>
    </form>
    <SCRIPT type="text/javascript">

        function onKeyPress(i) {
            var size = @sg.human_amount;
            var bounsSum = document.getElementById("bounsSum" + i);
            var saleSum = document.getElementById("saleSum" + i);
            var deductSum = document.getElementById("deductSum" + i);
            var salaryPaidSum = document.getElementById("salaryPaidSum" + i);
            if (isNaN(bounsSum.value) || bounsSum.value < 0) {
                alert("金额填写错误!");
                bounsSum.value = "0.00";
                return;
            }
            if (isNaN(saleSum.value) || saleSum.value < 0) {
                alert("金额填写错误!");
                saleSum.value = "0.00";
                return;
            }
            if (isNaN(deductSum.value) || deductSum.value < 0) {
                alert("金额填写错误!");
                deductSum.value = "0.00";
                return;
            }
            salaryPaidSum.value = Number(bounsSum.value) + Number(saleSum.value) - Number($("#deductSum"+i).val()) + Number(document.getElementById("salaryStandardSum" + i).value);
            var sadf = 0;
            $("input[id*='salaryPaidSum']").each(function () {
                sadf += parseInt($(this).val());
            })
            $("#salarySum_sum").val(sadf);
            $("#salary_paid_sum").val(sadf);
            var sum = 0;
            for (var j = 1; j <= size; j++) {
                sum = Number(sum) + Number(document.getElementById("salaryPaidSum" + j).value);
            }
            document.getElementById("salarySum_sum").innerHTML = sum;
            var sum = 0;
            for (var j = 1; j <= size; j++) {
                sum = Number(sum) + Number(document.getElementById("salaryPaidSum" + j).value);
            }
            document.getElementById("salarySum_sum").innerHTML = sum;
            document.getElementById("sum").value = sum;
        }



        function time() {
            var tdate = document.getElementById("Tdate");
            var d = new Date();
            var y = d.getFullYear();
            var moth = d.getMonth() + 1;
            var date = d.getDate();
            var h = d.getHours();
            var m = d.getMinutes();
            var s = d.getSeconds();
            var hh = 20 - 1 - h;
            var mm = 60 - 1 - m;
            var ss = 60 - s;
            if (hh > 0) {
                mm = mm + 60 * hh;
            }
            if (moth < 10) {
                moth = "0" + moth;
            }
            if (date < 10) {
                date = "0" + date;
            }
            if (h < 10) {
                h = "0" + h;
            }
            if (m < 10) {
                m = "0" + m;
            }
            if (s < 10) {
                s = "0" + s;
            }
            if (mm < 10) {
                mm = "0" + mm;
            }
            if (ss < 10) {
                ss = "0" + ss;
            }

            tdate.innerHTML = y + "-" + moth + "-" + date + " " + h + ":" + m + ":" + s;
            document.getElementById("Tdate2").value = tdate.innerHTML;
        }
        window.onload = time;
        var out = window.setInterval(time, 1000);
    </SCRIPT>
</body>
</html>
